{"mappings":"gfAAA,IACIA,EACAC,EACAC,EAHJC,EAAAC,EAAA,SAIIC,EAAa,EACbC,EAAW,GACTC,EACN,CACEC,gBAAiBC,SAASC,cAAc,uBACxCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,WAAYJ,SAASC,cAAc,SACnCI,aAAcL,SAASC,cAAc,iBAsDvC,SAASK,EAAWC,EAAOC,EAAOC,GAChC,IAAK,IAAIC,EAAkB,EAAGA,GAAmBF,EAAQE,GAAmB,EAC1Ed,EAAkC,IAArBc,EAA0BH,EAAQX,GAAca,EAC7DZ,EAASc,KAAKf,E,CAvDlBE,EAAKM,WAAWQ,iBAAiB,UAEjC,SAAkBC,GAChBA,EAAEC,iBACFvB,EAAewB,OAAOjB,EAAKC,gBAAgBiB,OAC3CxB,EAAcuB,OAAOjB,EAAKI,UAAUc,OACpCvB,EAAgBsB,OAAOjB,EAAKK,YAAYa,OACxClB,EAAKO,aAAaY,aAAa,WAAY,IAC3CX,EAAWf,EAAcE,EAAcD,GACvC0B,QAAQC,IAAIb,GACZT,EAASuB,KAAI,SAACb,EAAOc,IAwBvB,SAAuBA,EAAUd,GAe/B,OAdgB,IAAIe,SAAQ,SAACC,EAASC,GAEpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCT,QAAQC,IAAIM,GACZG,YAAW,WACLH,EACFF,EAAQ,CAAEF,SAAUA,EAAUd,MAAOA,IAErCiB,EAAO,CAAEH,SAAUA,EAAUd,MAAOA,G,GAErCA,E,KAjCHsB,CAAeR,EAAW,EAAId,GAC3BuB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALxB,MAEjBb,EAAAwC,OAAOC,QAAQ,qBAAoCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,OACzDf,QAAQC,IAAI,uBAAwCiB,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE3DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALxB,MAClBW,QAAQC,IAAI,sBAAqCiB,OAAfJ,EAAS,QAAYI,OAANH,EAAM,OACvDvC,EAAAwC,OAAOI,QAAQ,oBAAmCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,OAG9D1C,EAAe,EACfC,EAAc,EACdC,EAAgB,EAChBG,EAAa,EACbC,EAAW,GACXC,EAAKO,aAAakC,gBAAgB,WAAY,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nlet delayPromise;\nlet stepPromise;\nlet amountPromise;\nlet delayCount = 0;\nlet delayArr = [];\nconst refs =\n{\n  inputFirstDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  submitForm: document.querySelector('.form'),\n  submitButton: document.querySelector('.form button'),\n};\nrefs.submitForm.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  delayPromise = Number(refs.inputFirstDelay.value);\n  stepPromise = Number(refs.inputStep.value);\n  amountPromise = Number(refs.inputAmount.value);\n  refs.submitButton.setAttribute('disabled', '');\n  fillDelArr(delayPromise, amountPromise,stepPromise);\n  console.log(fillDelArr);\n  delayArr.map((delay, position,) => {\n\n    createPromise((position + 1), delay)\n      .then(({ position, delay }) => {\n\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n  delayPromise = 0;\n  stepPromise = 0;\n  amountPromise = 0;\n  delayCount = 0;\n  delayArr = [];\n  refs.submitButton.removeAttribute('disabled', '');\n};\n\n\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n    console.log(shouldResolve);\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n\n\n  })\n  return promise;\n}\n\nfunction fillDelArr(delay, amount,step) {\n  for (let positionPromise = 1; positionPromise <= amount; positionPromise += 1) {\n    delayCount = (positionPromise === 1) ? delay : delayCount += step;\n    delayArr.push(delayCount);\n  }\n};\n\n\n"],"names":["$ce04d3a99e08e73b$var$delayPromise","$ce04d3a99e08e73b$var$stepPromise","$ce04d3a99e08e73b$var$amountPromise","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$delayCount","$ce04d3a99e08e73b$var$delayArr","$ce04d3a99e08e73b$var$refs","inputFirstDelay","document","querySelector","inputStep","inputAmount","submitForm","submitButton","$ce04d3a99e08e73b$var$fillDelArr","delay","amount","step","positionPromise","push","addEventListener","e","preventDefault","Number","value","setAttribute","console","log","map","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","Notify","success","concat","catch","failure","removeAttribute"],"version":3,"file":"03-promises.63e80df7.js.map"}